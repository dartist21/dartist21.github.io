{"version":3,"sources":["app.js","lib/form.js","lib/pagination.js","pages/404.js","pages/final.js","pages/step1.js","pages/step2.js","pages/step3.js","pages/step4.js"],"names":[],"mappings":"AAAA;AACA;ECDA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;ECnxxIA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AR3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["(function() {\n\n  //=require 'lib/*'\n  //=require 'pages/*'\n\n  const rootElement = document.querySelector('#root');\n\n  rootElement.innerHTML = templates['step1']();\n\n  page('/step1', step1);\n  page('/step2', step2);\n  page('/step3', step3);\n  page('/step4', step4);\n  page('/final', final);\n  page('*', notfound);\n  page();\n\n})();\n","class Form {\n  constructor(data) {\n    this.data = Object.assign({}, Form.defaultData, data);\n\n    this.username = this.data.username;\n    this.email = this.data.email;\n    this.city = this.data.city;\n    this.cityValue = this.data.cityValue;\n    this.country = this.data.country;\n    this.countryValue = this.data.countryValue;\n    this.fb = this.data.fb;\n    this.vk = this.data.vk;\n    this.tw = this.data.tw;\n    this.ok = this.data.ok;\n    this.catUrl = this.data.catUrl;\n  }\n\n  setInformation(name, arg) {\n    this[name] = arg;\n  }\n\n  resetAll() {\n    this.username = null;\n    this.email = null;\n    this.city = null;\n    this.cityValue = null;\n    this.country = null;\n    this.countryValue = null;\n    this.fb = null;\n    this.vk = null;\n    this.tw = null;\n    this.ok = null;\n    this.catUrl = null;\n  }\n}\n\nForm.defaultData = {\n  username: null,\n  email: null,\n  city: null,\n  cityValue: null,\n  country: null,\n  countryValue: null,\n  fb: null,\n  vk: null,\n  tw: null,\n  ok: null,\n  catUrl: null\n};\n\nvar questionnaire = new Form();\n","  function pagination(curStep) {\n    let pagItems = document.querySelectorAll('.pagination-pg__item');\n    let prev = document.querySelector('.pagination-btn__prev');\n    let next = document.querySelector('.pagination-btn__next');\n    let finish = document.querySelector('.pagination-btn__finish');\n\n    let validationError = rootElement.querySelector('#validation-error');\n\n    for (let i = 0; i < pagItems.length; i++) {\n      pagItems[i].addEventListener('click', changePage);\n    }\n\n    if (prev) {\n      prev.addEventListener('click', goPrev);\n    }\n    if (next) {\n      next.addEventListener('click', goNext);\n    }\n    if (finish) {\n      finish.addEventListener('click', goFinish);\n    }\n\n\n    switch (curStep) {\n      case 1:\n        prev.classList.add('button--not-active');\n        for (let i = curStep; i < pagItems.length; i++) {\n          pagItems[i].classList.add('button--not-active');\n        }\n        break;\n      case 2:\n        for (let i = curStep - 2; i >= 0; --i) {\n          pagItems[i].classList.add('button--is-active');\n        }\n        for (let i = curStep; i < pagItems.length; i++) {\n          pagItems[i].classList.add('button--not-active');\n        }\n        break;\n      case 3:\n        for (let i = curStep - 2; i >= 0; --i) {\n          pagItems[i].classList.add('button--is-active');\n        }\n        for (let i = curStep; i < pagItems.length; i++) {\n          pagItems[i].classList.add('button--not-active');\n        }\n        break;\n      case 4:\n        for (let i = curStep - 2; i >= 0; --i) {\n          pagItems[i].classList.add('button--is-active');\n        }\n        for (let i = curStep; i < pagItems.length; i++) {\n          pagItems[i].classList.add('button--not-active');\n        }\n        next.classList.add('button--display-none');\n        finish.classList.remove('button--display-none');\n        break;\n      default:\n        console.log('check pagination');\n    }\n\n    function changePage(e) {\n      let pagItem = e.target;\n      let pagItemNum = pagItem.dataset.value;\n      page.redirect('/step' + pagItemNum);\n    }\n\n    function goPrev() {\n      prevStep = --curStep;\n      page.redirect('/step' + prevStep);\n    }\n\n    function goNext() {\n      if (validate()) {\n        nextStep = ++curStep;\n        page.redirect('/step' + nextStep);\n      } else {\n        validationError.classList.remove('form__error--display-none');\n      }\n    }\n\n    function goFinish() {\n      if (questionnaire.catUrl) {\n        page.redirect('/final');\n      } else {\n        validationError.classList.remove('form__error--display-none');\n      }\n    }\n\n    function validate() {\n      switch (curStep) {\n        case 1:\n          if (questionnaire.username && questionnaire.email) {\n            return true;\n          }\n          break;\n        case 2:\n          if (questionnaire.country && questionnaire.city) {\n            return true;\n          }\n          break;\n        case 3:\n          if (questionnaire.fb || questionnaire.vk || questionnaire.tw || questionnaire.ok) {\n            return true;\n          }\n          break;\n        default:\n          console.log('check pagination');\n      }\n    }\n  }\n","function notfound() {\n  rootElement.innerHTML = templates['404']();\n}\n","function final() {\n  rootElement.innerHTML = templates['final']();\n\n  let resetBtn = rootElement.querySelector('.pagination-btn__reset');\n  resetBtn.addEventListener('click', resetForm);\n\n  nameEl =      rootElement.querySelector('.profile-card__name');\n  emailEl =     rootElement.querySelector('.profile-card__email');\n  locationEl =  rootElement.querySelector('.profile-card__location');\n  fbEl =        rootElement.querySelector('.profile-card__fb');\n  vkEl =        rootElement.querySelector('.profile-card__vk');\n  twEl =        rootElement.querySelector('.profile-card__tw');\n  okEl =        rootElement.querySelector('.profile-card__ok');\n  catEl =       rootElement.querySelector('.profile-card__image');\n\n  nameEl.innerHTML = questionnaire.username;\n  emailEl.innerHTML = questionnaire.email;\n  locationEl.innerHTML = questionnaire.country + ' , ' + questionnaire.city;\n\n  if (fbEl) {\n    fbEl.innerHTML = questionnaire.fb;\n  }\n  if (vkEl) {\n    vkEl.innerHTML = questionnaire.vk;\n  }\n  if (twEl) {\n    twEl.innerHTML = questionnaire.tw;\n  }\n  if (okEl) {\n    okEl.innerHTML = questionnaire.ok;\n  }\n\n  catEl.src = questionnaire.catUrl;\n\n  function resetForm() {\n    questionnaire.resetAll();\n    page.redirect('/step1');\n  }\n\n}\n","function step1() {\n  rootElement.innerHTML = templates['step1']();\n\n  let curStep = 1;\n  pagination(curStep);\n\n  let nameInput = rootElement.querySelector('.form__name');\n  let emailInput = rootElement.querySelector('.form__email');\n\n  let nameError = rootElement.querySelector('#name-error');\n  let emailError = rootElement.querySelector('#email-error');\n\n  if (questionnaire.username) {\n    nameInput.value = questionnaire.username;\n  }\n\n  if (questionnaire.email) {\n    emailInput.value = questionnaire.email;\n  }\n\n  nameInput.addEventListener('focusin', resetStateName);\n  emailInput.addEventListener('focusin', resetStateEmail);\n\n  nameInput.addEventListener('focusout', validateName);\n  emailInput.addEventListener('focusout', validateEmail);\n\n  function validateName(el) {\n    let nameInputValue = el.target.value;\n\n    if (nameInputValue.length >= 2) {\n      resetStateName(el);\n      questionnaire.setInformation('username', nameInputValue);\n    } else {\n      el.target.classList.add('form__input--not-valid');\n      nameError.classList.remove('form__error--hidden');\n    }\n  }\n\n  function validateEmail(el) {\n    const EMAIL_RE = /.+@.+\\..+/i;\n    let emailInputValue = el.target.value;\n\n    if (emailInputValue.length >=2 && EMAIL_RE.test(emailInputValue)) {\n      resetStateEmail(el);\n      questionnaire.setInformation('email', emailInputValue);\n\n    } else if (emailError.classList.contains('form__error--hidden')) {\n      el.target.classList.add('form__input--not-valid');\n      emailError.classList.remove('form__error--hidden');\n    }\n  }\n\n  function resetStateEmail(el) {\n    emailError.classList.add('form__error--hidden');\n    el.target.classList.remove('form__input--not-valid');\n  }\n\n  function resetStateName(el) {\n    nameError.classList.add('form__error--hidden');\n    el.target.classList.remove('form__input--not-valid');\n  }\n\n}\n","function step2() {\n  rootElement.innerHTML = templates['step2']();\n\n  let curStep = 2;\n  pagination(curStep);\n\n  let countryInput = rootElement.querySelector('.form__country');\n  let cityInput = rootElement.querySelector('.form__city');\n\n  countryInput.addEventListener('focusout', validateCountry);\n  cityInput.addEventListener('focusout', validateCity);\n\n  countryInput.addEventListener('input', renderCityInput);\n\n  let cityObj = '';\n\n  const countryData  = fetch('/js/json/countries.json');\n  countryData\n    .then(response => {\n      return response.json();\n    })\n    .then(data => {\n      for(let key in data) {\n        let countryOption = document.createElement('option');\n        countryOption.innerHTML = data[key];\n        countryOption.value = key;\n        countryInput.appendChild(countryOption);\n      }\n    })\n    .then(setSavedCountry => {\n      if (questionnaire.countryValue) {\n        countryInput.value = questionnaire.countryValue;\n      }\n    })\n    .catch(error => {\n      console.log(error.message);\n    });\n\n  const cityData  = fetch('/js/json/cities.json');\n  cityData\n    .then(response => {\n      return response.json();\n    })\n    .then(data => {\n      cityObj = data;\n      if (questionnaire.cityValue) {\n        cityInput.classList.remove('form__input--not-active');\n\n        for(let key in data) {\n          let cityOption = document.createElement('option');\n          cityOption.innerHTML = data[key].name;\n          cityOption.value = key;\n          cityInput.appendChild(cityOption);\n        }\n\n        cityInput.value = questionnaire.cityValue;\n      }\n    })\n    .catch(error => {\n      console.log(error.message);\n    });\n\n  function renderCityInput(el) {\n    let CountryOptionValue = el.target.value;\n\n    while (cityInput.length > 1) {\n      cityInput.removeChild(cityInput.lastChild);\n    }\n    cityInput.classList.remove('form__input--not-active');\n\n    for (let key in cityObj) {\n      if (+cityObj[key].country === +CountryOptionValue) {\n        let cityOption = document.createElement('option');\n        cityOption.innerHTML = cityObj[key].name;\n        cityOption.value = key;\n        cityInput.appendChild(cityOption);\n      }\n    }\n  }\n\n  function validateCountry(el) {\n    let countryInputText = el.target.options[el.target.selectedIndex].text;\n    let countryInputValue = el.target.value;\n    questionnaire.setInformation('country', countryInputText);\n    questionnaire.setInformation('countryValue', countryInputValue);\n  }\n\n  function validateCity(el) {\n    let cityInputText = el.target.options[el.target.selectedIndex].text;\n    let cityInputValue = el.target.value;\n    questionnaire.setInformation('city', cityInputText);\n    questionnaire.setInformation('cityValue', cityInputValue);\n  }\n\n}\n","function step3() {\n  rootElement.innerHTML = templates['step3']();\n\n  let curStep = 3;\n  pagination(curStep);\n\n  let checkFb = rootElement.querySelector('input[name=\"check_fb\"]');\n  let checkVk = rootElement.querySelector('input[name=\"check_vk\"]');\n  let checkTw = rootElement.querySelector('input[name=\"check_tw\"]');\n  let checkOk = rootElement.querySelector('input[name=\"check_ok\"]');\n\n  let inputFb = rootElement.querySelector('input[name=\"input_fb\"]');\n  let inputVk = rootElement.querySelector('input[name=\"input_vk\"]');\n  let inputTw = rootElement.querySelector('input[name=\"input_tw\"]');\n  let inputOk = rootElement.querySelector('input[name=\"input_ok\"]');\n\n  let urlError = rootElement.querySelector('#url-error');\n\n  fillSavedSocialNetworks();\n\n  checkFb.addEventListener('click', showInput);\n  checkVk.addEventListener('click', showInput);\n  checkTw.addEventListener('click', showInput);\n  checkOk.addEventListener('click', showInput);\n\n  inputFb.addEventListener('focusout', validateUrl);\n  inputVk.addEventListener('focusout', validateUrl);\n  inputTw.addEventListener('focusout', validateUrl);\n  inputOk.addEventListener('focusout', validateUrl);\n\n  inputFb.addEventListener('focusin', resetState);\n  inputVk.addEventListener('focusin', resetState);\n  inputTw.addEventListener('focusin', resetState);\n  inputOk.addEventListener('focusin', resetState);\n\n  function showInput(el) {\n    if (el.target.checked) {\n      switch (el.target.name) {\n        case 'check_fb':\n          inputFb.classList.remove('form__input--hidden');\n          break;\n        case 'check_vk':\n          inputVk.classList.remove('form__input--hidden');\n          break;\n        case 'check_tw':\n          inputTw.classList.remove('form__input--hidden');\n          break;\n        case 'check_ok':\n          inputOk.classList.remove('form__input--hidden');\n          break;\n        default:\n          console.log('error in switch');\n          break;\n      }\n    } else {\n      switch (el.target.name) {\n        case 'check_fb':\n          inputFb.classList.add('form__input--hidden');\n          break;\n        case 'check_vk':\n          inputVk.classList.add('form__input--hidden');\n          break;\n        case 'check_tw':\n          inputTw.classList.add('form__input--hidden');\n          break;\n        case 'check_ok':\n          inputOk.classList.add('form__input--hidden');\n          break;\n        default:\n          console.log('error in switch');\n          break;\n      }\n    }\n\n\n  }\n\n  function validateUrl(el) {\n    let URL_RE = /^[a-z]+[.]+[a-z]+[/]+[a-z0-9-_]+/i;\n    let inputValue = el.target.value;\n\n    if (inputValue.length >=6 && URL_RE.test(inputValue)) {\n      resetState(el);\n      switch (el.target.name) {\n        case 'input_fb':\n          questionnaire.setInformation('fb', inputValue);\n          break;\n        case 'input_vk':\n          questionnaire.setInformation('vk', inputValue);\n          break;\n        case 'input_tw':\n          questionnaire.setInformation('tw', inputValue);\n          break;\n        case 'input_ok':\n          questionnaire.setInformation('ok', inputValue);\n          break;\n        default:\n          console.log('errror in switch');\n          break;\n      }\n    } else if (!el.target.classList.contains('form__error--hidden')) {\n      el.target.classList.add('form__input--not-valid');\n      urlError.classList.remove('form__error--hidden');\n    }\n  }\n\n  function resetState(el) {\n    if (el.target.classList.contains('form__input--not-valid')) {\n      urlError.classList.add('form__error--hidden');\n      el.target.classList.remove('form__input--not-valid');\n    }\n  }\n\n  function fillSavedSocialNetworks() {\n    if (questionnaire.fb) {\n      checkFb.checked = true;\n      inputFb.value = questionnaire.fb;\n      inputFb.classList.remove('form__input--hidden');\n    }\n    if (questionnaire.vk) {\n      checkVk.checked = true;\n      inputVk.value = questionnaire.vk;\n      inputVk.classList.remove('form__input--hidden');\n    }\n    if (questionnaire.tw) {\n      checkTw.checked = true;\n      inputTw.value = questionnaire.tw;\n      inputTw.classList.remove('form__input--hidden');\n    }\n    if (questionnaire.ok) {\n      checkOk.checked = true;\n      inputOk.value = questionnaire.ok;\n      inputOk.classList.remove('form__input--hidden');\n    }\n  }\n}\n","function step4() {\n  rootElement.innerHTML = templates['step4']();\n\n  let curStep = 4;\n  pagination(curStep);\n\n  let animalImages = rootElement.querySelectorAll('.animal-img__item');\n  let animalError = rootElement.querySelector('#animal-error');\n\n  for (let i = 0; i < animalImages.length; i++) {\n    animalImages[i].addEventListener('click', checkAnimal);\n  }\n\n  function checkAnimal(el) {\n    animalError.classList.add('form__error--hidden');\n\n    for (let i = 0; i < animalImages.length; i++) {\n      animalImages[i].classList.remove('animal-img__item--is-choosed');\n    }\n\n    el.target.classList.add('animal-img__item--is-choosed');\n\n    if (el.target.dataset.animal === 'dog') {\n      animalError.classList.remove('form__error--hidden');\n    } else {\n      questionnaire.setInformation('catUrl', el.target.currentSrc);\n    }\n  }\n\n\n}\n"]}